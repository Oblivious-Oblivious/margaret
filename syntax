first_unit:
    unit EOF

unit:
    assignment_chain keyword_message

assignment_chain:
    keyword_message '='
  | keyword_message '=' assignment_chain
  | ε

keyword_message:
    keyword_selector_chain
  | binary_message keyword_selector_chain

keyword_selector_chain:
    IDENTIFIER ':' binary_message
  | IDENTIFIER ':' binary_message keyword_selector_chain
  | ε

binary_message:
    unary_message binary_selector_chain

binary_selector_chain:
    MESSAGE_SYMBOL unary_message
  | MESSAGE_SYMBOL unary_message binary_selector_chain
  | ε

unary_message:
    lhs_message unary_selector_chain

unary_selector_chain:
    IDENTIFIER
  | IDENTIFIER unary_selector_chain
  | ε

lhs_message:
    lhs_selector literal

lhs_selector:
    MESSAGE_SYMBOL
  | ε

literal:
    scalar
  | '(' unit_list ')'
  | '[' unit_list ']'
  | '{' param_list unit_list '}'
  | '%' '(' bit_list ')'
  | '%' '[' unit_list ']'
  | '%' '{' association_list '}'
  | '#' literal method_definition
  | ε

unit_list:
    unit
  | unit ',' unit_list

param_list:
    IDENTIFIER '|'
  | IDENTIFIER ',' param_list
  | ε

bit_list:
    bit
  | bit ',' bit_list
  | ε

bit:
    scalar
  | scalar ':' ':' INTEGER

association_list:
    scalar : unit
  | scalar : unit ',' association_list

method_definition:
    IDENTIFIER '=>' unit
  | MESSAGE_SYMBOL '=>' unit
  | keyword_list '=>' unit
  | MESSAGE_SYMBOL literal '=>' unit

keyword_list:
    IDENTIFIER ':' literal
  | IDENTIFIER ':' literal keyword_list

scalar:
    '$' 'nil'
  | '$' 'false'
  | '$' 'true'
  | ':' ':' IDENTIFIER
  | INTEGER
  | FLOAT
  | STRING
  | IDENTIFIER

FLOAT:                ^\d+(_\d+)*\.\d+(_\d+)*
INTEGER:              ^(?:0[bBoOxX][\da-fA-F_]+|0|[1-9][\d_]*)
STRING:               ^(['"]).*?\1

IDENTIFIER:           ^[@$]?[a-zA-Z_][a-zA-Z0-9_]*
MESSAGE_SYMBOL:       ^[!?+\-*/\\~<>=|&^;.`]+
SYNTAX_SYMBOL:        ^[()\[\]{},:#%]

EOF:                  ends parsing
