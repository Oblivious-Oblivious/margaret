first_unit:
    unit_list EOF

unit_list:
    unit
  | unit ',' unit_list

unit:
    assignment_message

assignment_message:
    keyword_message
  | keyword_message '=' assignment_message

keyword_message:
    keyword_selector_chain
  | binary_message keyword_selector_chain

keyword_selector_chain:
    IDENTIFIER ':' binary_message
  | IDENTIFIER ':' binary_message keyword_selector_chain

binary_message:
    unary_message binary_selector_chain

binary_selector_chain:
    MESSAGE_SYMBOL unary_message
  | MESSAGE_SYMBOL unary_message binary_selector_chain

unary_message:
    lhs_message unary_selector_chain

unary_selector_chain:
    IDENTIFIER
  | IDENTIFIER unary_selector_chain

lhs_message:
    MESSAGE_SYMBOL literal

literal:
    scalar
  | '(' unit_list ')'
  | '[' unit_list ']'
  | '{' param_list unit_list '}'
  | '%' '(' bit_list ')'
  | '%' '[' unit_list ']'
  | '%' '{' association_list '}'
  | '#' literal method_definition

param_list:
    IDENTIFIER '|'
  | IDENTIFIER ',' param_list

bit_list:
    bit
  | bit ',' bit_list

bit:
    scalar
  | scalar ':' ':' INTEGER

association_list:
    key ':' unit
  | key ':' unit ',' association_list

key:
    IDENTIFIER
  | STRING

method_definition:
    keyword_list '=>' method_body
  | IDENTIFIER '=>' method_body
  | MESSAGE_SYMBOL '=>' method_body
  | MESSAGE_SYMBOL literal '=>' method_body

method_body:
    unit
  | { unit_list }

keyword_list:
    IDENTIFIER ':' literal
  | IDENTIFIER ':' literal keyword_list

scalar:
  | ':' ':' IDENTIFIER
  | INTEGER
  | FLOAT
  | STRING
  | variable

variable:
    '$nil'
  | '$false'
  | '$true'
  | '@self'
  | '@super'
  | GLOBAL
  | INSTANCE
  | IDENTIFIER

FLOAT:                ^\d+(_\d+)*\.\d+(_\d+)*
INTEGER:              ^(?:0[bBoOxX][\da-fA-F_]+|0|[1-9][\d_]*)
STRING:               ^(['"]).*?\1

IDENTIFIER:           ^[a-zA-Z_][a-zA-Z0-9_]*
INSTANCE:             ^@[a-zA-Z_][a-zA-Z0-9_]*
GLOBAL:               ^$[a-zA-Z_][a-zA-Z0-9_]*

MESSAGE_SYMBOL:       ^[!?+\-*/\\~<>=|&^;.`]+
SYNTAX_SYMBOL:        ^[()\[\]{},:#%]

EOF:                  ends parsing
NEWLINE:              for counting lines
WHITESPACE:           to ignore
